generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Gift {
  id           String  @id @default(cuid())
  name         String
  link         String?
  ownedBy      User    @relation("owner", fields: [ownedById], references: [id])
  ownedById    String
  addedBy      User    @relation("added", fields: [addedById], references: [id])
  addedById    String
  selectedBy   User?   @relation("selected", fields: [selectedById], references: [id])
  selectedById String?
}

model User {
  id            String @id @default(cuid())
  name          String
  email         String @unique
  ownedGifts    Gift[] @relation("owner")
  addedGifts    Gift[] @relation("added")
  selectedGifts Gift[] @relation("selected")
}

model Admin {
  id          String @id @default(cuid())
  displayName String
  username    String @unique
  password    String
}

model Registration {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String

  accommodation   Accommodation? @relation("accommodation", fields: [accommodationId], references: [id])
  accommodationId Int?
}

model Accommodation {
  id            Int            @id @default(autoincrement())
  ref           String
  link          String
  name          String
  beds          Int
  available     Int
  price1        Int
  price2        Int
  registrations Registration[] @relation("accommodation")
}
